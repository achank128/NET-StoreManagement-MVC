@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor


@{
    ViewData["Title"] = "Export Store";
}

<div class="row">
    <div class="col-md-8">
        <h2>@_localization.Getkey("export_list")</h2>
    </div>
    <div class="col-md-4 text-end">
        <a class="btn" asp-action="Index">
            <i class="bi bi-arrow-clockwise"></i>
        </a>
    </div>
    <div class="col-md-12 text-end  mb-3">
        <button id="ExportExcel" class="btn btn-outline-success mr-2">
            <i class="bi bi-file-earmark-excel"></i> @_localization.Getkey("common_export_excel")
        </button>
        <button class="btn btn-success" onclick="openAddForm()">
            <i class="bi bi-plus-circle"></i> @_localization.Getkey("common_add_new")
        </button>
    </div>

    <div class="offcanvas offcanvas-end" id="offcanvasForm" aria-labelledby="offcanvasFormLabel" style="width: 800px;">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title text-primary" id="offcanvasFormLabel">@_localization.Getkey("common_add_new")</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <form id="form" class="row" novalidate>
                <div class="col-md-6 mb-2">
                    <label class="control-label">@_localization.Getkey("export_exporter")</label>
                    <input id="ExportStoreId" name="ExportStoreId" type="hidden" />
                    <select id="ExporterId" class="form-control" asp-items="ViewBag.UsersList" required></select>

                </div>
                <div class="col-md-6 mb-2">
                    <label class="control-label">@_localization.Getkey("customer")</label>
                    <select id="CustomerId" class="form-control" asp-items="ViewBag.CustomersList" required></select>

                </div>
                <div class="col-md-6 mb-2">
                    <label class="control-label">@_localization.Getkey("export_date")</label>
                    <input id="ExportDate" name="ExportDate" class="form-control" type="date" required />
                </div>
                <div class="col-md-12 mb-2">
                    <label class="control-label">@_localization.Getkey("common_note")</label>
                    <textarea id="Note" class="form-control"></textarea>
                </div>
                <div class="col-md-12 my-4">
                    <p class="mb-0">@_localization.Getkey("product_list"):</p>
                    <table id="ProductItem-Table" class="table table-bordered">
                        <thead>
                            <tr>
                                <th style="width: 160px;">@_localization.Getkey("product")</th>
                                <th>@_localization.Getkey("product_price")</th>
                                <th>@_localization.Getkey("product_quantity_in_stock")</th>
                                <th>@_localization.Getkey("common_quantity")</th>
                                <th>@_localization.Getkey("export_price")</th>
                                <th class="text-center">
                                    <button id="add-product-item" class="btn btn-success">
                                        <i class="bi bi-plus-square"></i> @_localization.Getkey("common_add")
                                    </button>
                                </th>
                            </tr>
                        </thead>
                        <tbody id="product-items">
                        </tbody>
                    </table>
                </div>
                <div class="col-md-12 mb-4 d-flex justify-content-between align-items-center">
                    <label class="control-label">@_localization.Getkey("common_subtotal"):</label>
                    <input id="SubTotal" class="form-control w-50" type="number" readonly />
                </div>
                <div class="col-md-12 mb-4 d-flex justify-content-between align-items-center">
                    <label class="control-label">@_localization.Getkey("common_discount")</label>
                    <div class="d-flex w-50">
                        <select id="DiscountPercent" class="form-select">
                            <option value="0" selected>@_localization.Getkey("common_choose_discount")</option>
                            <option value="5">5%</option>
                            <option value="10">10%</option>
                            <option value="15">15%</option>
                        </select>
                        <input id="Discount" class="form-control" type="number" readonly />
                    </div>
                </div>
                <div class="col-md-12 mb-4 d-flex justify-content-between align-items-center">
                    <label class="control-label h5">@_localization.Getkey("common_total"):</label>
                    <input id="Total" class="form-control w-50" type="number" readonly />
                </div>
                <div class="form-group">
                    <button id="btnSubmit" class="btn btn-primary">Thêm</button>
                </div>
            </form>
        </div>
    </div>

    <div class="col-md-12">
        <div class="table-responsive" style="width: 100%">
            <table id="ExportStore-Table" class="table table-bordered">
                <thead>
                    <tr>
                        <th>@_localization.Getkey("export_id")</th>
                        <th>@_localization.Getkey("export_exporter")</th>
                        <th>@_localization.Getkey("customer")</th>
                        <th>@_localization.Getkey("export_date")</th>
                        <th>@_localization.Getkey("common_created_date")</th>
                        <th>@_localization.Getkey("common_total")</th>
                        <th class="text-end">@_localization.Getkey("common_actions")</th>
                    </tr>
                </thead>
            </table>
        </div>

    </div>

    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">@_localization.Getkey("common_confirm_delete")</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @_localization.Getkey("common_are_you_sure_delete")
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@_localization.Getkey("common_back")</button>
                    <button type="button" class="btn btn-danger" onclick="handleDelete()">@_localization.Getkey("common_confirm")</button>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        var dataTable;
        var isEdit = false;
        var deleteItemId = "";
        var form = $('#form')[0];
        var offcanvasForm = new bootstrap.Offcanvas($('#offcanvasForm'));
        var productsList = [];

        $(document).ready(function () {
            dataTable = $("#ExportStore-Table").DataTable({
                "processing": true,
                "serverSide": true,
                "filter": true,
                "orderMulti": false,
                "ordering": false,
                "ajax": {
                    "url": "/ExportStore/GetData",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "id" },
                    { "data": "exporter.fullName" },
                    { "data": "customer.customerName" },
                    {
                        "data": "exportDate",
                        "render": (data) => new Date(data).toLocaleDateString('en-GB')
                    },
                    {
                        "data": "createdDate",
                        "render": (data) => new Date(data).toLocaleDateString('en-GB')
                    },
                    {
                        "data": "total",
                        "render": (data) => new Intl.NumberFormat('en-US').format(data)
                    },
                    {
                        "render": (data, type, row, meta) => {
                            return `<a class="btn btn-outline-info" onclick="openDetailForm('${row.id}')"><i class="bi bi-eye"></i></a>
                                                                                                                    <a class="btn btn-primary" onclick="openEditForm('${row.id}')"><i class="bi bi-pencil-square"></i></a>
                                                                                                                    <a class="btn btn-danger" onclick="openDeleteModal('${row.id}')" ><i class="bi bi-trash"></i></a>`
                        },
                        "class": "text-end"
                    },
                ],
                "responsive": true,
                "language": {
                    "emptyTable": "No data found"
                },
                "dom": 'Bfrtip',
                "buttons": [
                    {

                        "extend": 'excel',
                        "text": '<button class="btn btn-outline-success"><i class="fa fa-file-excel-o" style="color: green;"></i> Export</button>',
                        "titleAttr": 'Excel',
                        "action": newexportaction,
                        "exportOptions": {
                            columns: ':not(:last-child)',
                            modifer: {
                                page: 'all',
                                search: 'none'    
                            }
                        },
                        "filename": function () {
                            var exportNameLabel = @Html.Raw(Json.Serialize(_localization.Getkey("export_list")));
                            var d = new Date();
                            var l = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate();
                            var n = d.getHours() + "-" + d.getMinutes() + "-" + d.getSeconds();
                            return exportNameLabel.value + '_' + l + ' ' + n;
                        },
                    },
                ],
            });

            $('#ProductItem-Table').on('change', '.Price', (e) => {
                caculateTotal();
            });
            $('#ProductItem-Table').on('change', '.Quantity', (e) => {
                caculateTotal();
            });
            $('#DiscountPercent').on('change', (e) => {
                caculateTotal();
            });

            $("#add-product-item").click((e) => {
                e.preventDefault();
                addProductItem();
            });

            $('#ExportExcel').click(()=>{
                $('.buttons-excel').click();
            })

            form.addEventListener('submit', event => {
                event.preventDefault()
                if (!form.checkValidity()) {
                    event.stopPropagation()
                    var validateLabel = @Html.Raw(Json.Serialize(_localization.Getkey("common_notyf_please_enter_input")));
                    notyf.error(validateLabel.value);
                } else {
                    handleSave()
                }
                form.classList.add('was-validated')
            }, false)
        });

        function newexportaction(e, dt, button, config) {
            var self = this;
            var oldStart = dt.settings()[0]._iDisplayStart;
            dt.one('preXhr', function (e, s, data) {
                // Just this once, load all data from the server...
                data.start = 0;
                data.length = 2147483647;
                dt.one('preDraw', function (e, settings) {
                    // Call the original action function
                    if (button[0].className.indexOf('buttons-copy') >= 0) {
                        $.fn.dataTable.ext.buttons.copyHtml5.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-excel') >= 0) {
                        $.fn.dataTable.ext.buttons.excelHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.excelFlash.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-csv') >= 0) {
                        $.fn.dataTable.ext.buttons.csvHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.csvFlash.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-pdf') >= 0) {
                        $.fn.dataTable.ext.buttons.pdfHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.pdfFlash.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-print') >= 0) {
                        $.fn.dataTable.ext.buttons.print.action(e, dt, button, config);
                    }
                    dt.one('preXhr', function (e, s, data) {
                        // DataTables thinks the first item displayed is index 0, but we're not drawing that.
                        // Set the property to what it was before exporting.
                        settings._iDisplayStart = oldStart;
                        data.start = oldStart;
                    });
                    // Reload the grid with the original page. Otherwise, API functions like table.cell(this) don't work properly.
                    setTimeout(dt.ajax.reload, 0);
                    // Prevent rendering of the full data to the DOM
                    return false;
                });
            });
            // Requery the server with the new one-time export settings
            dt.ajax.reload();
        };

        function openAddForm() {
            isEdit = false;
            resetForm();
            $("#product-items").empty();
            $("#DiscountPercent").show();
            $("#ExporterId").val('@HttpContextAccessor.HttpContext.Session.GetString("idUser")');
            var addLabel = @Html.Raw(Json.Serialize(_localization.Getkey("common_add")));
            var addNewLabel = @Html.Raw(Json.Serialize(_localization.Getkey("common_add_new")));
            $('#btnSubmit').show().text(addLabel.value);
            $('#offcanvasFormLabel').text(addNewLabel.value);
            disableValueForm(false);
            offcanvasForm.show();
        }

        function openEditForm(id) {
            isEdit = true;
            resetForm();
            $("#product-items").empty();
            $("#DiscountPercent").show();
            $("#ExporterId").val('@HttpContextAccessor.HttpContext.Session.GetString("idUser")');
            var updateLabel = @Html.Raw(Json.Serialize(_localization.Getkey("common_update")));
            $('#btnSubmit').show().text(updateLabel.value);
            disableValueForm(false);
            getDetailValue(id)
            offcanvasForm.show();
        }


        function openDetailForm(id) {
            isEdit = false;
            $('#btnSubmit').hide();
            $("#DiscountPercent").hide();
            $("#product-items").empty();
            disableValueForm(true);
            getDetailValue(id);
            offcanvasForm.show();
        }

        function resetForm() {
            form.reset();
            $('#form').removeClass('was-validated');
        }

        function disableValueForm(disabled) {
            $('#ExporterId').prop("disabled", disabled);
            $('#CustomerId').prop("disabled", disabled);
            $('#ExportDate').prop("disabled", disabled);
            $('#SubTotal').prop("disabled", disabled);
            $('#Discount').prop("disabled", disabled);
            $('#Note').prop("disabled", disabled);
            $('#Total').prop("disabled", disabled);
            $('.product-item').each((i, e) => {
                $(e).find('.Product').prop("disabled", disabled);
                $(e).find('.Quantity').prop("disabled", disabled);
                $(e).find('.Price').prop("disabled", disabled);
                $(e).find('.btn').prop("disabled", disabled);
            });
            $("#add-product-item").prop("disabled", disabled);
        }

        function openDeleteModal(id) {
            $('#deleteModal').modal("show");
            deleteItemId = id;
        }

        function getDetailValue(id) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Details","ExportStore")/' + id,
                success: function (data) {
                    console.log(data)

                    var detailsLabel = @Json.Serialize(_localization.Getkey("common_details"));
                    $('#offcanvasFormLabel').text(detailsLabel.value);
                    $('#ExportStoreId').val(data.data.id);
                    $('#ExporterId').val(data.data.exporterId);
                    $('#CustomerId').val(data.data.customerId);
                    $('#ExportDate').val(new Date(data.data.exportDate).toISOString().split('T')[0]);
                    $('#SubTotal').val(data.data.subTotal);
                    $('#Discount').val(data.data.discount);
                    $('#Note').val(data.data.note);
                    $('#Total').val(data.data.total);
                    data.data.exportStoreDetails.forEach((detail) => {
                        addProductItem(detail);
                    })
                }
            }).done(() => disableValueForm(!isEdit));
        }

        function addProductItem(productItem) {
            var newProductItemHtml = "";
            if(productItem) {
                newProductItemHtml = `
                        <tr class="product-item">
                            <td>
                                <input value="${productItem.product.productName}" class="Products form-control">
                                <input value="${productItem.product.id}" class="ProductId" type="hidden" />
                            </td>
                            <td><input value="${productItem.product.importPrice}" type="number" class="ProductPrice form-control" readonly/></td>
                            <td><input value="${productItem.product.number}" type="number" class="Number form-control" readonly/></td>
                            <td><input value="${productItem.quantity}" type="number" class="Quantity form-control" min="0" required/></td>
                            <td><input value="${productItem.exportPrice}" type="number" class="Price form-control" min="0" required/></td>
                            <td class="text-center align-middle">
                                <button class="btn btn-outline-danger btn-sm"><i class="bi bi-x"></i></button>
                            </td>
                        </tr>`
            } else {
                newProductItemHtml = `
                        <tr class="product-item">
                            <td>
                                <input class="Products form-control">
                                <input class="ProductId" type="hidden" />
                            </td>
                            <td><input type="number" class="ProductPrice form-control" readonly/></td>
                            <td><input type="number" class="Number form-control" readonly/></td>
                            <td><input type="number" class="Quantity form-control" min="0" required/></td>
                            <td><input type="number" class="Price form-control" min="0" required/></td>
                            <td class="text-center align-middle">
                                <button class="btn btn-outline-danger btn-sm"><i class="bi bi-x"></i></button>
                            </td>
                        </tr>`
            }
            
            $("#product-items").append(newProductItemHtml);
            setProductItems();
        }

        function setProductItems() {
            $('.product-item').each((i, e) => {
                $(e).find(".Products").autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '/Product/GetAll',
                            type: 'GET',
                            dataType: "json",
                            data: {
                                searchString: request.term
                            },
                            success: function (data) {
                                response($.map(data.data, function (item) {
                                    return {
                                        id: item.id,
                                        label: item.productName,
                                        value: item.productName,
                                        price: item.price,
                                        importPrice: item.importPrice,
                                        number: item.number,
                                    };
                                }));
                            }
                        });
                    },
                    minLength: 2,
                    maxLength: 6,
                    select: function (event, ui) {
                        $(e).find('.ProductId').val(ui.item.id);
                        $(e).find('.ProductPrice').val(ui.item.price);
                        $(e).find('.Number').val(ui.item.number);
                        $(e).find('.Price').val(ui.item.price);
                    }
                });

                $(e).find('.btn').on('click', () => {
                    $(e).remove();
                })
            })
        }

        function caculateTotal() {
            var total = 0;
            $('.product-item').each((i, e) => {
                var item = {
                    quantity: $(e).find('.Quantity').val(),
                    price: $(e).find('.Price').val(),
                }
                total += Number(item.quantity) * Number(item.price);
            });
            $("#SubTotal").val(total);
            $("#Discount").val(- $("#DiscountPercent").val() / 100 * total);
            $("#Total").val(total + Number($("#Discount").val()));
        }

        function handleSave() {
            var data = {
                id: $("#ExportStoreId").val(),
                exporterId: $("#ExporterId").val(),
                customerId: $("#CustomerId").val(),
                exportDate: $("#ExportDate").val(),
                subTotal: $("#SubTotal").val(),
                discount: $("#Discount").val(),
                note: $("#Note").val(),
                total: $("#Total").val(),
                listProducts: []
            };

            $('.product-item').each((i, e) => {
                var item = {
                    productId: $(e).find('.ProductId').val(),
                    quantity: $(e).find('.Quantity').val(),
                    price: $(e).find('.Price').val(),
                }
                data.listProducts.push(item);
            });

            var createSuccessLabel = @Json.Serialize(_localization.Getkey("common_notyf_create_success"));
            var updateSuccessLabel = @Json.Serialize(_localization.Getkey("common_notyf_update_success"));
            var errorLabel = @Json.Serialize(_localization.Getkey("common_notyf_error"));

            if (isEdit) {
                $.ajax({
                    url: '/ExportStore/EditExportStore',
                    type: 'POST',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    success: function (data) {
                        if (data.isSuccess) {
                            notyf.success(updateSuccessLabel.value);
                            dataTable.ajax.reload();
                            offcanvasForm.hide();
                        } else {
                            notyf.error(errorLabel.value);
                        }
                    },
                    error: function () {
                        notyf.error(errorLabel.value);
                    }
                })
            } else {
                $.ajax({
                    url: '/ExportStore/CreateExportStore',
                    type: 'POST',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    success: function (data) {
                        if (data.isSuccess) {
                            notyf.success(createSuccessLabel.value);
                            dataTable.ajax.reload();
                            offcanvasForm.hide();
                        } else {
                            notyf.error(errorLabel.value);
                        }
                    },
                    error: function () {
                        notyf.error(errorLabel.value);
                    }
                })
            }
        }

        function handleDelete() {
            var deleteSuccessLabel = @Json.Serialize(_localization.Getkey("common_notyf_delete_success"));
            var errorLabel = @Json.Serialize(_localization.Getkey("common_notyf_error"));
            $.ajax({
                type: "POST",
                url: '@Url.Action("Delete","ExportStore")/' + deleteItemId,
                success: function (data) {
                    if (data.isSuccess) {
                        dataTable.ajax.reload();
                        notyf.success(deleteSuccessLabel.value);
                        $('#deleteModal').modal("hide");
                    } else {
                        notyf.error(errorLabel.value);
                        $('#deleteModal').modal("hide");
                    }
                },
                error: function () {
                    notyf.error(errorLabel.value);
                    $('#deleteModal').modal("hide");
                }
            });
        }


    </script>
}
