@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@{
    ViewData["Title"] = "Export Store";
}

<div class="row">
    <div class="col-md-8">
        <h2>Phiếu xuất kho</h2>
    </div>
    <div class="col-md-4 text-end">
        <a class="btn" asp-action="Index">
            <i class="bi bi-arrow-clockwise"></i>
        </a>
    </div>
    <div class="col-md-4 mb-3">
        <form asp-action="Index" method="get">
            <div class="input-group">
                <input type="text" class="form-control" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Tìm kiếm" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="col-md-8 text-end">
        <a class="btn btn-success" onclick="openAddForm()">
            <i class="bi bi-plus-circle"></i> Thêm mới
        </a>
    </div>

    <div class="offcanvas offcanvas-end" id="offcanvasForm" aria-labelledby="offcanvasFormLabel" style="width: 800px;">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title text-primary" id="offcanvasFormLabel">Thêm mới</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <form id="form" class="row" novalidate>
                <div class="col-md-12 mb-2">
                    <label class="control-label">Người xuất</label>
                    <input id="ExportStoreId" name="ExportStoreId" type="hidden" />
                    <input id="ExporterName" name="ExporterName" class="form-control" required />
                </div>
                <div class="col-md-12 mb-2">
                    <label class="control-label">Khách hàng</label>
                    <input id="Customer" name="Customer" class="form-control" required />
                </div>
                <div class="col-md-6 mb-2">
                    <label class="control-label">Ngày xuất</label>
                    <input id="ExportDate" name="ExportDate" class="form-control" type="date" required />
                </div>
                <div class="col-md-12 my-4">
                    <p class="mb-0">Chi tiết phiếu xuất kho:</p>
                    <table id="ProductItem-Table" class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Sản phẩm</th>
                                <th>Đơn giá</th>
                                <th>Số lượng</th>
                                <th>Giá Xuất</th>
                                <th class="text-center">
                                    <button id="add-product-item" class="btn btn-success">
                                        <i class="bi bi-plus-square"></i> Thêm
                                    </button>
                                </th>
                            </tr>
                        </thead>
                        <tbody id="product-items">
                        </tbody>
                    </table>
                </div>
                <div class="col-md-6 mb-4">
                    <label class="control-label">Tổng tiền</label>
                    <input id="Total" class="form-control" type="number" readonly />
                </div>
                <div class="form-group">
                    <button id="btnSubmit" class="btn btn-primary">Thêm</button>
                </div>
            </form>
        </div>
    </div>

    <div class="col-md-12">
        <table id="ExportStore-Table" class="table table-bordered" style="width: 100%">
            <thead>
                <tr>
                    <th>Mã xuất</th>
                    <th>Người xuất</th>
                    <th>Khách hàng</th>
                    <th>Ngày xuất</th>
                    <th>Ngày cập nhật</th>
                    <th>Tổng tiền</th>
                    <th class="text-end">Thao tác</th>
                </tr>
            </thead>
        </table>
    </div>

    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Xác nhận xóa</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Bạn có chắc chắn muốn xóa?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Quay lại</button>
                    <button type="button" class="btn btn-danger" onclick="handleDelete()">Xác nhận</button>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        var dataTable;
        var isEdit = false;
        var deleteItemId = "";
        var form = $('#form')[0];
        var offcanvasForm = new bootstrap.Offcanvas($('#offcanvasForm'));
        var productsList = [];

        $(document).ready(function () {
            dataTable = $("#ExportStore-Table").DataTable({
                "ajax": {
                    "url": "/ExportStore/GetData",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "id" },
                    { "data": "exporterName" },
                    { "data": "customer" },
                    {
                        "data": "exportDate",
                        "render": (data) => new Date(data).toLocaleDateString('en-GB')
                    },
                    {
                        "data": "createdDate",
                        "render": (data) => new Date(data).toLocaleDateString('en-GB')
                    },
                    {
                        "data": "total",
                        "render": (data) => new Intl.NumberFormat('en-US').format(data)
                    },
                    {
                        "render": (data, type, row, meta) => {
                            return `<a class="btn btn-outline-info" onclick="openDetailForm('${row.id}')"><i class="bi bi-eye"></i></a>
                                            <a class="btn btn-primary" onclick="openEditForm('${row.id}')"><i class="bi bi-pencil-square"></i></a>
                                            <a class="btn btn-danger" onclick="openDeleteModal('${row.id}')" ><i class="bi bi-trash"></i></a>`
                        },
                        "class": "text-end"
                    },
                ],
                "responsive": true,
                "language": {
                    "emptyTable": "No data found"
                },
            });

            getProductItems();

            $('#ProductItem-Table').on('change', '.Price', (e) => {
                caculateTotal()
            });

            $('#ProductItem-Table').on('change', '.Quantity', (e) => {
                caculateTotal()
            })

            $("#add-product-item").click((e) => {
                e.preventDefault();
                addProductItem();
            })

            form.addEventListener('submit', event => {
                event.preventDefault()
                if (!form.checkValidity()) {
                    event.stopPropagation()
                    notyf.error('Vui lòng nhập đầy đủ thông tin.');
                } else {
                    handleSave()
                }
                form.classList.add('was-validated')
            }, false)
        });

        function openAddForm() {
            isEdit = false;
            resetForm()
            $("#product-items").empty();
            $('#btnSubmit').show().text("Thêm")
            disableValueForm(false);
            offcanvasForm.show();
        }

        function openEditForm(id) {
            isEdit = true;
            $('#btnSubmit').show().text("Cập nhật");
            $("#product-items").empty();
            disableValueForm(false);
            getDetailValue(id)
            offcanvasForm.show();
        }


        function openDetailForm(id) {
            isEdit = false;
            $('#btnSubmit').hide();
            $("#product-items").empty();
            disableValueForm(true);
            getDetailValue(id);
            offcanvasForm.show();
        }

        function resetForm() {
            $('#form')[0].reset();
            var elems = document.querySelectorAll(".text-danger");
            elems.forEach(itm => {
                document.getElementById(itm.id).innerHTML = ''
            })
        }

        function disableValueForm(disabled) {
            $('#ExporterName').prop("disabled", disabled);
            $('#Customer').prop("disabled", disabled);
            $('#ExportDate').prop("disabled", disabled);
            $('#Total').prop("disabled", disabled);
            $('.product-item').each((i, e) => {
                $(e).find('.Product').prop("disabled", disabled);
                $(e).find('.Quantity').prop("disabled", disabled);
                $(e).find('.Price').prop("disabled", disabled);
                $(e).find('.btn').prop("disabled", disabled);
            });
            $("#add-product-item").prop("disabled", disabled);
        }

        function openDeleteModal(id) {
            $('#deleteModal').modal("show");
            deleteItemId = id;
        }

        function getDetailValue(id) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Details","ExportStore")/' + id,
                success: function (data) {
                    console.log(data)
                    $('#offcanvasFormLabel').text("Chi tiết");
                    $('#ExportStoreId').val(data.data.id);
                    $('#ExporterName').val(data.data.exporterName);
                    $('#Customer').val(data.data.customer);
                    $('#ExportDate').val(new Date(data.data.exportDate).toISOString().split('T')[0]);
                    $('#Total').val(data.data.total);
                    data.data.exportStoreDetails.forEach((detail) => {
                        addProductItem(detail);
                    })
                }
            }).done(() => disableValueForm(!isEdit));
        }

        function handleDelete() {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Delete","ExportStore")/' + deleteItemId,
                success: function (data) {
                    if (data.isSuccess) {
                        dataTable.ajax.reload();
                        notyf.success('Xóa dữ liệu thành công.');
                        $('#deleteModal').modal("hide");
                    } else {
                        notyf.error('Có lỗi xảy ra.');
                    }
                }
            });
        }

        function getProductItems() {
            $.ajax({
                url: '/Product/GetData',
                type: 'GET',
            }).done(function (result) {
                productsList = result.data;
            });
        }

        function addProductItem(productItem) {
            var newProductItemHtml = `
                                <tr class="product-item">
                                    <td>
                                        <select class="Product form-select" required>
                                            ${productsList.map((p) => (`<option value="${p.id}" ${productItem?.productId == p.id && 'selected'}>${p.productName}</option>`)).join('')}
                                        </select>
                                    </td>
                                    <td><input value="${productItem?.importPrice}" type="number" class="ProductPrice form-control" readonly/></td>
                                    <td><input value="${productItem?.quantity}" type="number" class="Quantity form-control" min="0" required/></td>
                                    <td><input value="${productItem?.exportPrice}" type="number" class="Price form-control" min="0" required/></td>
                                    <td class="text-center align-middle">
                                        <button class="btn btn-outline-danger btn-sm"><i class="bi bi-x"></i></button>
                                    </td>
                                </tr>`
            $("#product-items").append(newProductItemHtml);
            setProductItems();
        }


        function setProductItems() {
            $('.product-item').each((i, e) => {
                var productId = $(e).find('.Product :selected').val();
                var productPrice = productsList.find(p => p.id == productId).price
                $(e).find('.ProductPrice').val(productPrice);

                $(e).find('.Product').on('change', () => {
                    var productId = $(e).find('.Product :selected').val();
                    var productPrice = productsList.find(p => p.id == productId).price
                    $(e).find('.ProductPrice').val(productPrice);
                })
                $(e).find('.btn').on('click', () => {
                    $(e).remove();
                })
            })
        }

        function caculateTotal() {
            var total = 0;
            $('.product-item').each((i, e) => {
                var item = {
                    quantity: $(e).find('.Quantity').val(),
                    price: $(e).find('.Price').val(),
                }
                total += Number(item.quantity) * Number(item.price);
            });
            $("#Total").val(total)
        }

        function handleSave() {
            var data = {
                id: $("#ExportStoreId").val(),
                exporterName: $("#ExporterName").val(),
                customer: $("#Customer").val(),
                exportDate: $("#ExportDate").val(),
                total: $("#Total").val(),
                listProducts: []
            };

            $('.product-item').each((i, e) => {
                var item = {
                    productId: $(e).find('.Product :selected').val(),
                    quantity: $(e).find('.Quantity').val(),
                    price: $(e).find('.Price').val(),
                }
                data.listProducts.push(item);
            });

            if (isEdit) {
                $.ajax({
                    url: '/ExportStore/EditExportStore',
                    type: 'POST',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    error: (e) => {
                        notyf.error('Lưu dữ liệu không thành công');
                    },
                    success: (data) => {
                        if (data.isSuccess) {
                            notyf.success('Cập nhật dữ liệu thành công.');
                            offcanvasForm.hide();
                            dataTable.ajax.reload();
                        } else {
                            notyf.error('Có lỗi xảy ra.');
                        }
                    },
                })
            } else {
                $.ajax({
                    url: '/ExportStore/CreateExportStore',
                    type: 'POST',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    error: (e) => {
                        notyf.error('Lưu dữ liệu không thành công');
                    },
                    success: (data) => {
                        if (data.isSuccess) {
                            notyf.success('Thêm dữ liệu thành công.');
                            offcanvasForm.hide();
                            dataTable.ajax.reload();
                        } else {
                            notyf.error('Có lỗi xảy ra.');
                        }
                    },
                })
            }
        }
    </script>
}
